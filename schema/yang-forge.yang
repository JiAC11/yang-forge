module yang-forge {
  namespace "urn:ietf:params:xml:ns:yang:yang-forge";
  prefix forge;
  yang-version 1.1;

  import ietf-yang-types   { prefix yang; }
  import yang-meta-types   { prefix meta; }
  import node-package-manager { prefix npm; }

  organization
    "Corenova Technologies, Inc.";
  contact
    "Peter K. Lee <peter@corenova.com>";
  description
    "This module provides YANG schema and package management operations";

  revision 2016-11-09 {
    description "Updated to YANG 1.1 and revised with npm and commander module dependencies";
  }
  revision 2016-03-25 {
    description "Enhanced with 0.12.x functionality";
  }
  revision 2015-09-23 {
    description "Enhanced with 0.10.x functionality";
  }
  revision 2015-05-04 {
    description "Initial revision";
  }
  /*
   * Groupings
   */
  grouping core-manifest {
    description
      "The core essence of the module contained in the package.";
    leaf id {
      config false;
      type yang:uuid;
    }
    leaf package {
      type leafref {
        path "/npm:registry/package/id";
      }
      mandatory true;
    }
    leaf source {
      type leafref {
        path "/npm:registry/source/id";
      }
      mandatory true;
    }
    leaf-list dependency {
      type leafref {
        path "/forge:registry/core/id";
      }
    }
    leaf-list dependent {
      type leafref {
        path "/forge:registry/core/id";
      }
    }
    list model {
      key name;
      leaf name {
        type yang:yang-identifier;
      }
      leaf source {
        type meta:file-name;
      }
    }
  }
  grouping cores-list {
    list core {
      key "name version";
      uses forge:core-manifest;
    }
  }
  /*
   * Configuration data nodes
   */
  container registry {
    uses cores-list;
  }
  /*
   * Remote Procedure Operations
   */
  rpc transform {
    description
      "Transforms input JSON or JS object source into forge:package-analysis data model.";
    input {
      anydata source {
        description "JSON text or JS object representing package.json content";
        mandatory true;
      }
    }
    output {
      uses forge:package-analysis;
    }
  }
  rpc query {
    description
      "Query NPM registry recursively for information about package(s)"
    input {
      uses npm:package-selection-list {
        refine "package" {
          min-elements 1;
          max-elements 10;
        }
      }
    }
    output {
      uses forge:package-analysis-list {
        refine "package" {
          min-elements 1;
        }
      }
    }
  }
  rpc build {
    description
      "Build a core-manifest for a specified package.";
    input {
      uses npm:package-selection;
    }
    output {
      uses forge:package-analysis-list {
        
      }
      uses forge:package-analysis;
    }
  }
}
